q()
install.packages("View")
install.packages("manipulate")
library("manipulate", lib.loc="C:/Program Files/R/R-3.2.0/library")
?View
install.packages("UsingR")
josh =c(1,2,3,4,5,6,7,8,9,10)
names(josh)=c('a','b');
josh
?sum
help(sum)
data.entry(josh)
fix(JOSH)
fix(josh)
i=1:10
i=c(1:10)
i
a=1;h=4;n=5
aa=a+h*(0:(n-1))
aa
i[1]
i[i>5]
which(i>5)
i>5
clear
i
x=c(10,20,30,40,50,60,70,80,90,100)
x[1]
which(x>50)
x[1,2]
x[C(1,2)]
x[C(2,3)]
x[2]
x[3]
x[c(2,3)]
x[C(2,3)]
x>50
x[x>50]
WD
wd
help 
help workspace
wk
help()
getwd()
ls()
load('train.sea.30.Rdata')
ls()
summary(train.sea.30)
train.sea.30$growClass=droplevels(train.sea.30$growClass)
train.sea.30$growClass[train.sea.30$growRate > 0]='good'
train.sea.30$growClass[train.sea.30$growRate < 0]='bad'
train.sea.30$growClass=factor(train.sea.30$growClass)
train.sea.filter.30=train.sea.30[train.sea.30$YieldRate<50 & train.sea.30$PE<50 & train.sea.30$ROE>-50 & train.sea.30$ROE<100 & train.sea.30$MonthRate<100 & train.sea.30$MonthRate > -50 & train.sea.30$YearRate >-100 & train.sea.30$YearRate<100,]
summary(train.sea.30)
summary(train.sea.filter.30)
library(rminer)
model=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='svm')
VariableImportance=Importance(model,train.sea.filter.30,method="sensv")
install.packages("C50")
library(C50)
data(churn)
str(churnTrain)
churnTrain = churnTrain[,! names(churnTrain) %in% c("state", "area_code", "account_length") ]
str(churnTrain)
set.seed(2)
ind <- sample(2, nrow(churnTrain), replace = TRUE, prob=c(0.7, 0.3))
ind
trainset = churnTrain[ind == 1,]
str(trainset)
str(train.sea.filter.30)
VariableImportance=Importance(model,train.sea.filter.30,method="sensv")
train.sea.filter.30[train.sea.30$growClass==na]
train.sea.filter.30[train.sea.30$growClass==NA]
is.na(train.sea.filter.30)
train.sea.filter.30[train.sea.30$growClass=='NA]
'
dd  
train.sea.filter.30[train.sea.30$growClass=='NA']
model
VariableImportance=Importance(model,train.sea.filter.30,method="sensv")
model=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='rpart')
VariableImportance=Importance(model,train.sea.filter.30,method="sensv")
VariableImportance=Importance(model,train.sea.filter.30,method="sensa")
VariableImportance=Importance(model,train.sea.filter.30,method="sensr")
VariableImportance=Importance(model,train.sea.filter.30,method="sensv")
VariableImportance=Importance(model,train.sea.filter.30,method="sensa")
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(trainset),col="gray",Grid=10)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model,train.sea.filter.30,method="sensv")
model=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='svm')
VariableImportance=Importance(model,train.sea.filter.30,method="sensa")
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model,train.sea.filter.30,method="DS")
VariableImportance=Importance(model,train.sea.filter.30,method="DSA")
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
model=fit(growClass ~ YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='svm')
print(model)
model=fit(growClass ~ YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='rpart')
print(model)
plot(model)
plot(model, margin=0.)
plot(model, margin=0.1)
plot(model)
model
str(model)
model=fit(growClass ~ YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='ctree')
model
str(trainset)
new_train = trainset[,! names(churnTrain) %in% c("churn", "international_plan", "voice_mail_plan")]
str(new_train)
str(train.sea.filter.30)
str(train.sea.30)
summary(train.sea.30)
train.sea.30=train.sea.30[train.sea.30$YieldRate<50 & train.sea.30$PE<50 & train.sea.30$ROE>-50 & train.sea.30$ROE<100 & train.sea.30$MonthRate<100 & train.sea.30$MonthRate > -50 & train.sea.30$YearRate >-100 & train.sea.30$YearRate<100,]
train.sea.30$growClass=droplevels(train.sea.30$growClass)
train.sea.30$growClass[train.sea.30$growRate > 0]='good'
train.sea.30$growClass[train.sea.30$growRate < 0]='bad'
train.sea.30$growClass=factor(train.sea.30$growClass)
summary(train.sea.30)
new_train.sea.30=train.sea.30[,! names(train.sea.30) %in% c("StockId", "TimeId", "Diff","growRate","growClass")]
str(new_train.sea.30)
cor(new_train.sea.30)
library(caret)
highlyCorrelated = findCorrelation(cor_mat, cutoff=0.75)
cor_mat=cor(new_train.sea.30)
highlyCorrelated = findCorrelation(cor_mat, cutoff=0.75)
names(new_train)[highlyCorrelated]
highlyCorrelated
names(new_train.sea.30)[highlyCorrelated]
cor_mat=cor(new_train.sea.30)
cor_mat
model
plot(model)
VariableImportance=Importance(model,train.sea.filter.30,method="sens")
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
model=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='svm')
VariableImportance=Importance(model,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance
model=fit(growClass ~ YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='svm')
VariableImportance=Importance(model,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance
model_rpart=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='rpart')
model_ctree=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='ctree')
model_randFor=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='randomForest')
VariableImportance=Importance(model_rpart,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model_ctree,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model_randFor,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
model_knn=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='randomForest')
VariableImportance=Importance(model_knn,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model_ctree,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
model_boosting=fit(growClass ~YieldRate+PE+PBR+EPS+DebtRatio+ROE+MonthRate+YearRate,train.sea.filter.30,model='randomForest')
VariableImportance=Importance(model_boosting,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model,train.sea.filter.30)
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model,train.sea.filter.30,mothod='sensv')
VariableImportance=Importance(model,train.sea.filter.30,mothod='senv')
VariableImportance=Importance(model,train.sea.filter.30,method='senv')
VariableImportance=Importance(model,train.sea.filter.30,method='sensv')
VariableImportance=Importance(model,train.sea.filter.30,method='senv')
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model,train.sea.filter.30,method='sena')
L=list(runs=1,sen=t(VariableImportance$imp),sresponses=VariableImportance$sresponses)
mgraph(L,graph="IMP",leg=names(train.sea.filter.30),col="gray",Grid=10)
VariableImportance=Importance(model,train.sea.filter.30,method='MSA')
q()
save.image("C:\\Temp\\R.RData")
q()
